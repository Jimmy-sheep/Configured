plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = "${project.mod_id}-fabric"
version = "${project.mod_version}-${project.minecraft_version}"
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/configured.accesswidener")

	runs {
		client {
			configName = "Client"
			runDir = "run"
			source = sourceSets.main
			ideConfigGenerated = true
			client()
		}

		testClient {
			inherit client
			configName = "Test Client"
			source = sourceSets.test
		}

		server {
			configName = "Server"
			runDir = "run"
			source = sourceSets.main
			ideConfigGenerated = true
			server()
		}

		testServer {
			inherit server
			configName = "Test Server"
			source = sourceSets.test
		}
	}
}

repositories {
	maven {
		url "https://maven.terraformersmc.com/"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	mappings loom.officialMojangMappings()

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "com.google.code.findbugs:annotations:3.0.1"
	modImplementation "com.terraformersmc:modmenu:4.0.6"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Add night config toml
	implementation include('com.electronwill.night-config:core:3.6.0')
	implementation include('com.electronwill.night-config:toml:3.6.0')

}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.mod_id}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
